# Generated by Django 5.0.4 on 2024-04-16 18:11

import cloudinary.models
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Category Name')),
                ('friendly_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Tag Name')),
                ('friendly_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Product Name')),
                ('sku', models.CharField(blank=True, help_text='Stock Keeping Unit, generated automatically', max_length=255, null=True, unique=True, verbose_name='SKU')),
                ('year', models.IntegerField(blank=True, help_text='Year the product was released, e.g. 2024', null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2024)], verbose_name='Year Released')),
                ('description', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Description')),
                ('min_players', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Minimum Players')),
                ('max_players', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(24)], verbose_name='Maximum Players')),
                ('min_age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(99)], verbose_name='Minimum Age')),
                ('play_time', models.IntegerField(blank=True, choices=[(15, 'Mini'), (30, 'Short'), (60, 'Medium'), (120, 'Long'), (240, 'Epic'), (480, 'Legendary')], default=30, help_text='Average play time in minutes', null=True, verbose_name='Play Time')),
                ('publisher', models.CharField(blank=True, max_length=255, null=True, verbose_name='Publisher')),
                ('has_dimensions', models.BooleanField(default=False, verbose_name='Has Dimensions')),
                ('has_quantity', models.BooleanField(default=False, verbose_name='Has Quantity')),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text='Height in cm', max_digits=6, null=True, verbose_name='Height')),
                ('quantity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(100)], verbose_name='Quantity')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, verbose_name='Rating')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Price')),
                ('difficulty', models.IntegerField(blank=True, choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard'), (4, 'Expert'), (5, 'Master')], default=2, null=True, verbose_name='Difficulty')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Is Featured')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.category')),
                ('tags', models.ManyToManyField(blank=True, related_name='products', to='products.tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', cloudinary.models.CloudinaryField(blank=True, default='static/images/default_product.jpg', max_length=255, null=True, verbose_name='product_images')),
                ('image_url', models.URLField(blank=True, max_length=1024, null=True, verbose_name='Image URL')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alt Text')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Image',
                'verbose_name_plural': 'Product Images',
                'ordering': ['product'],
            },
        ),
    ]
